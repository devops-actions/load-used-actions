name: Testing the action

on: 
  push: 

  workflow_dispatch:
    
# Declare default GITHUB_TOKEN permissions as read only.
permissions: read-all

jobs:
  run-pester-tests:
    runs-on: ubuntu-latest
    name: Run Pester tests
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Execute tests
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # execute Pester tests

          # install powershell-yaml as it is not on the runners by default
          $moduleName = "powershell-yaml"
          Install-Module -Name $moduleName -Force -Scope CurrentUser -AllowClobber

          # execute tests
          $testResults = Invoke-Pester
          if ($testResults.FailedCount -gt 0) {
            throw "Tests failed"
          }
          else {
            Write-Host "Tests passed"
          }

  load-all-used-actions:
    runs-on: ubuntu-latest
    name: Test on current organization
    steps: 
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - uses: ./
        name: Load used actions
        with: 
          PAT: ${{ secrets.GITHUB_TOKEN }}
        id: load-actions

      - shell: pwsh
        name: Check the output file location to contain the expected content
        run: |
          # check the output file location to contain the expected content
          Write-Host "Got actions file location here [${{ steps.load-actions.outputs.actions-file }}]"
          $content = Get-Content -Path "${{ steps.load-actions.outputs.actions-file }}"
          $actions = $content | ConvertFrom-Json
          if ($actions.Length -le 0) {
            Set-Content -Value "No actions found" -Path $env:GITHUB_STEP_SUMMARY
            throw "No actions found"
          } 
          else {
            Write-Host "Found [$($actions.Length)] actions"
            Set-Content -Value "Found [$($actions.Length)] actions" -Path $env:GITHUB_STEP_SUMMARY
          }

      - name: Upload result file as artefact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with: 
          name: actions-${{ env.GITHUB_REPOSITORY_OWNER }}
          path: |
            actions.json
            used-actions.json

  load-all-used-actions-other-org:
    runs-on: ubuntu-latest
    name: Test on different organization
    env:
      organization: rajbos-actions-demo
    steps: 
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - uses: ./
        name: Load used actions
        with: 
          PAT: ${{ secrets.GITHUB_TOKEN }}
          organization: ${{ env.organization }}
        id: load-actions

      - shell: pwsh
        name: Check the output file location to contain the expected content
        run: |
          # check the output file location to contain the expected content
          Write-Host "Got actions file location here [${{ steps.load-actions.outputs.actions-file }}]"
          $content = Get-Content -Path "${{ steps.load-actions.outputs.actions-file }}"
          $actions = $content | ConvertFrom-Json
          if ($actions.Length -le 0) {
            Set-Content -Value "No actions found" -Path $env:GITHUB_STEP_SUMMARY
            throw "No actions found"
          } 
          else {
            Write-Host "Found [$($actions.Length)] actions"
            Set-Content -Value "Found [$($actions.Length)] actions" -Path $env:GITHUB_STEP_SUMMARY
          }
            
      - name: Upload result file as artefact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with: 
          name: actions-${{ env.organization }}
          path: |
            actions.json
            used-actions.json
